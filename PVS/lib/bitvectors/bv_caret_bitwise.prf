(bv_caret_bitwise (bv_OR_caret_TCC1 0 (bv_OR_caret_TCC1-1 nil 3341451894 ("" (subtype-tcc) nil nil) ((minus_odd_is_odd application-judgement "odd_int" integers nil) (posint_plus_nnint_is_posint application-judgement "posint" integers nil)) nil)) (bv_OR_caret 0 (bv_OR_caret-1 nil 3341451901 ("" (expand* "^" "OR") nil nil) ((OR const-decl "bvec[N]" bv_bitwise nil) (^ const-decl "bvec[PROJ_1(sp) - PROJ_2(sp) + 1]" bv_caret nil) (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers nil) (posint_plus_nnint_is_posint application-judgement "posint" integers nil) (int_minus_int_is_int application-judgement "int" integers nil) (minus_odd_is_odd application-judgement "odd_int" integers nil)) shostak)) (bv_AND_caret 0 (bv_AND_caret-1 nil 3341451916 ("" (expand* "^" "AND") nil nil) ((AND const-decl "bvec[N]" bv_bitwise nil) (^ const-decl "bvec[PROJ_1(sp) - PROJ_2(sp) + 1]" bv_caret nil) (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers nil) (posint_plus_nnint_is_posint application-judgement "posint" integers nil) (int_minus_int_is_int application-judgement "int" integers nil) (minus_odd_is_odd application-judgement "odd_int" integers nil)) shostak)) (bv_IFF_caret 0 (bv_IFF_caret-1 nil 3341451924 ("" (expand* "^" "IFF") nil nil) ((IFF const-decl "bvec[N]" bv_bitwise nil) (^ const-decl "bvec[PROJ_1(sp) - PROJ_2(sp) + 1]" bv_caret nil) (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers nil) (posint_plus_nnint_is_posint application-judgement "posint" integers nil) (int_minus_int_is_int application-judgement "int" integers nil) (minus_odd_is_odd application-judgement "odd_int" integers nil)) shostak)) (bv_XOR_caret 0 (bv_XOR_caret-1 nil 3341451929 ("" (expand* "^" "XOR") nil nil) ((XOR const-decl "bvec[N]" bv_bitwise nil) (^ const-decl "bvec[PROJ_1(sp) - PROJ_2(sp) + 1]" bv_caret nil) (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers nil) (posint_plus_nnint_is_posint application-judgement "posint" integers nil) (int_minus_int_is_int application-judgement "int" integers nil) (minus_odd_is_odd application-judgement "odd_int" integers nil)) shostak)) (bv_NOT_caret 0 (bv_NOT_caret-1 nil 3341451935 ("" (expand* "^" "NOT") nil nil) ((NOT const-decl "bvec[N]" bv_bitwise nil) (^ const-decl "bvec[PROJ_1(sp) - PROJ_2(sp) + 1]" bv_caret nil) (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers nil) (posint_plus_nnint_is_posint application-judgement "posint" integers nil) (int_minus_int_is_int application-judgement "int" integers nil) (minus_odd_is_odd application-judgement "odd_int" integers nil)) shostak)))
