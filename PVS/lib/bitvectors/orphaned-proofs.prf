("bv_arith_concat" bv_arith_concat bv2nat_concat_TCC1 0 (bv2nat_concat_TCC1-1 nil 3552271097 ("" (same-name-tcc) nil nil) nil nil))("bv_caret_concat" bv_caret_concat caret_concat_join_TCC4 0 (caret_concat_join_TCC4-1 nil 3552271101 ("" (subtype-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (> const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nonneg_int nonempty-type-eq-decl nil integers nil) (posnat nonempty-type-eq-decl nil integers nil) (< const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (below type-eq-decl nil nat_types nil) (<= const-decl "bool" reals nil) (upto nonempty-type-eq-decl nil nat_types nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_lt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (^ const-decl "bvec[PROJ_1(sp) - PROJ_2(sp) + 1]" bv_caret nil) (minus_odd_is_odd application-judgement "odd_int" integers nil) (int_minus_int_is_int application-judgement "int" integers nil) (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers nil) (posint_plus_nnint_is_posint application-judgement "posint" integers nil)) nil))("bv_caret_concat" bv_caret_concat caret_fill_TCC2 0 (caret_fill_TCC2-1 nil 3552271101 ("" (same-name-tcc) nil nil) ((minus_odd_is_odd application-judgement "odd_int" integers nil) (posint_plus_nnint_is_posint application-judgement "posint" integers nil)) nil))("bv_arith_caret" bv_arith_caret bv_bot_TCC1 0 (bv_bot_TCC1-1 nil 3552271108 ("" (same-name-tcc) nil nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules bv_caret_concat_over_addition_1_TCC1 0 (bv_caret_concat_over_addition_1_TCC1-1 nil 3565025740 ("" (subtype-tcc) nil nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules bv_caret_concat_over_addition_1_TCC2 0 (bv_caret_concat_over_addition_1_TCC2-1 nil 3565025740 ("" (subtype-tcc) nil nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules bv_caret_concat_over_addition_1_TCC3 0 (bv_caret_concat_over_addition_1_TCC3-1 nil 3565025740 ("" (subtype-tcc) nil nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules bv_caret_concat_over_addition_1_TCC4 0 (bv_caret_concat_over_addition_1_TCC4-1 nil 3565025740 ("" (subtype-tcc) nil nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules bv_caret_concat_over_addition_1_TCC5 0 (bv_caret_concat_over_addition_1_TCC5-1 nil 3565025740 ("" (subtype-tcc) nil nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules bv_caret_concat_over_addition_1 0 (bv_caret_concat_over_addition_1-1 nil 3565025740 ("" (skosimp*) (("" (rewrite "bv2nat_inj[n1!1+1]") (("" (hide 2) (("" (postpone) nil)))))) nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC1 0 (superrange_addition_TCC1-1 nil 3565025740 ("" (subtype-tcc) nil nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC2 0 (superrange_addition_TCC2-1 nil 3565025740 ("" (subtype-tcc) nil nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC3 0 (superrange_addition_TCC3-1 nil 3565025740 ("" (subtype-tcc) nil nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC4 0 (superrange_addition_TCC4-1 nil 3565025740 ("" (subtype-tcc) nil nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC5 0 (superrange_addition_TCC5-1 nil 3565025740 ("" (subtype-tcc) nil nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC6 0 (superrange_addition_TCC6-1 nil 3565025740 ("" (subtype-tcc) nil nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC7 0 (superrange_addition_TCC7-1 nil 3565025740 ("" (subtype-tcc) nil nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC8 0 (superrange_addition_TCC8-1 nil 3565025740 ("" (subtype-tcc) nil nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC9 0 (superrange_addition_TCC9-1 nil 3565025740 ("" (subtype-tcc) nil nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC10 0 (superrange_addition_TCC10-1 nil 3565025740 ("" (subtype-tcc) nil nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition 0 (superrange_addition-1 nil 3565025740 ("" (skosimp*) (("" (rewrite "bv_plus_caret" :dir rl) (("" (rewrite "bv_plus_caret" :dir rl) (("" (name-replace "BV" "bv1!1 + n!1 ") (("" (apply-extensionality 1 :hide? t) (("" (grind) nil)))))))))) nil) nil nil))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules bv_caret_concat_over_addition_1_TCC1 "" (SUBTYPE-TCC) NIL)("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules bv_caret_concat_over_addition_1_TCC2 "" (SUBTYPE-TCC) NIL)("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules bv_caret_concat_over_addition_1_TCC3 "" (SUBTYPE-TCC) NIL)("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules bv_caret_concat_over_addition_1_TCC4 "" (SUBTYPE-TCC) NIL)("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules bv_caret_concat_over_addition_1_TCC5 "" (SUBTYPE-TCC) NIL)("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules bv_caret_concat_over_addition_1 "" (SKOSIMP*) (("" (REWRITE "bv2nat_inj[n1!1+1]") (("" (HIDE 2) (("" (POSTPONE) NIL)))))))("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC1 "" (SUBTYPE-TCC) NIL)("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC2 "" (SUBTYPE-TCC) NIL)("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC3 "" (SUBTYPE-TCC) NIL)("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC4 "" (SUBTYPE-TCC) NIL)("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC5 "" (SUBTYPE-TCC) NIL)("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC6 "" (SUBTYPE-TCC) NIL)("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC7 "" (SUBTYPE-TCC) NIL)("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC8 "" (SUBTYPE-TCC) NIL)("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC9 "" (SUBTYPE-TCC) NIL)("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition_TCC10 "" (SUBTYPE-TCC) NIL)("bv_arith_caret_concat_rules" bv_arith_caret_concat_rules superrange_addition "" (SKOSIMP*) (("" (REWRITE "bv_plus_caret" :DIR RL) (("" (REWRITE "bv_plus_caret" :DIR RL) (("" (NAME-REPLACE "BV" "bv1!1 + n!1 ") (("" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("" (GRIND) NIL)))))))))))