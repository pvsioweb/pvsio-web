(finite_sets_minmax_props
 (max_le 0
  (max_le-1 nil 3338234952
   ("" (skolem!)
    (("" (typepred "max(SS!1)")
      (("" (prop)
        (("1" (skosimp)
          (("1" (inst?)
            (("1" (lemma "lt_transitive")
              (("1" (inst - "x!1" "max(SS!1)" "a!1")
                (("1" (assert) nil nil)) nil))
              nil))
            nil))
          nil)
         ("2" (inst - "max(SS!1)") (("2" (assert) nil nil)) nil))
        nil))
      nil))
    nil)
   ((max const-decl
         "{a: T | SS(a) AND (FORALL (x: T): SS(x) IMPLIES x <= a)}"
         finite_sets_minmax nil)
    (<= formal-const-decl "(total_order?[T])" finite_sets_minmax_props
        nil)
    (total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (empty? const-decl "bool" sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (T formal-type-decl nil finite_sets_minmax_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (lt_transitive formula-decl nil finite_sets_minmax nil))
   shostak))
 (le_max 0
  (le_max-1 nil 3338235006
   ("" (skolem!)
    (("" (typepred "max(SS!1)")
      (("" (prop)
        (("1" (inst?) (("1" (assert) nil nil)) nil)
         ("2" (skosimp)
          (("2" (inst - "x!1")
            (("2" (assert)
              (("2" (lemma "lt_transitive")
                (("2" (inst - "a!1" "x!1" "max(SS!1)")
                  (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((max const-decl
         "{a: T | SS(a) AND (FORALL (x: T): SS(x) IMPLIES x <= a)}"
         finite_sets_minmax nil)
    (<= formal-const-decl "(total_order?[T])" finite_sets_minmax_props
        nil)
    (total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (empty? const-decl "bool" sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (T formal-type-decl nil finite_sets_minmax_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (lt_transitive formula-decl nil finite_sets_minmax nil))
   shostak)))

