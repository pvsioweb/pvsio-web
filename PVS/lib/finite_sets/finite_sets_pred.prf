(finite_sets_pred
 (finite_pred 0
  (finite_pred-1 nil 3338292178
   ("" (expand* "fullset" "is_finite")
    (("" (skosimp*)
      (("" (inst + "N!1" "LAMBDA (x: ({x: T | P!1(x)})): f!1(x)")
        (("" (expand "injective?")
          (("" (skosimp) (("" (inst?) (("" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((injective? const-decl "bool" functions nil)
    (TRUE const-decl "bool" booleans nil)
    (below type-eq-decl nil nat_types nil)
    (< const-decl "bool" reals nil)
    (pred type-eq-decl nil defined_types nil)
    (T formal-type-decl nil finite_sets_pred nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (fullset const-decl "set" sets nil)
    (is_finite const-decl "bool" finite_sets nil))
   shostak))
 (card_implies_TCC1 0
  (card_implies_TCC1-1 nil 3338292166
   ("" (skosimp) (("" (rewrite "finite_pred") nil nil)) nil)
   ((finite_pred formula-decl nil finite_sets_pred nil)
    (T formal-type-decl nil finite_sets_pred nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (pred type-eq-decl nil defined_types nil))
   nil))
 (card_implies_TCC2 0
  (card_implies_TCC2-1 nil 3338292166
   ("" (skosimp) (("" (rewrite "finite_pred") nil nil)) nil)
   ((finite_pred formula-decl nil finite_sets_pred nil)
    (T formal-type-decl nil finite_sets_pred nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (pred type-eq-decl nil defined_types nil))
   nil))
 (card_implies 0
  (card_implies-1 nil 3338292265
   ("" (skosimp)
    (("" (use "card_subset[T]")
      (("1" (assert) (("1" (expand* "subset?" "member") nil nil)) nil)
       ("2" (rewrite "finite_pred") nil nil)
       ("3" (rewrite "finite_pred") nil nil))
      nil))
    nil)
   ((card_subset formula-decl nil finite_sets nil)
    (T formal-type-decl nil finite_sets_pred nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (P2!1 skolem-const-decl "pred[T]" finite_sets_pred nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (pred type-eq-decl nil defined_types nil)
    (P1!1 skolem-const-decl "pred[T]" finite_sets_pred nil)
    (subset? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (finite_pred formula-decl nil finite_sets_pred nil))
   shostak)))

