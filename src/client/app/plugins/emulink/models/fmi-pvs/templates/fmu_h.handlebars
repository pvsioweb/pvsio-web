/*
 * This file contains the definitions of the functions used by myfmu.cpp:
 * 		extern void initialize(fmi2String );
 * 			this one needs the string as parameter to forward the path where the resources folder is unzipped
 *		extern int sendToPVS();
 * 			this is the function called every time the fmi2DoStep is invoked
 *		extern void terminate();
 * 			this is the function called when the co-simulation terminates
 * 		FmiBuffer
 * 			This structure maintains all the variables that are accessed by means of fmi2GetXXX and fmi2SetXXX
 *
 **/
#ifndef FMU_H
#define FMU_H

#include "./fmi/fmi2Functions.h"
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <iostream>
#include <sys/types.h>
#include <sys/wait.h>
#include "err.h"
#include <libwebsockets.h>
#include <signal.h>
#include <stdlib.h>

#define BOOL_COUNT {{count.bool}}
#define INT_COUNT {{count.int}}
#define REAL_COUNT {{count.real}}
#define STRING_COUNT {{count.string}}
#define FMI_COSIMULATION

struct FmiBuffer {
     fmi2Boolean {{buffer_names.bool}}[BOOL_COUNT];
     fmi2Integer {{buffer_names.int}}[INT_COUNT];
     fmi2Real {{buffer_names.real}}[REAL_COUNT];
     fmi2String {{buffer_names.string}}[STRING_COUNT];
};

extern struct FmiBuffer fmiBuffer;

void initialize(fmi2String);
int open_websocket();
void close_websocket();
void sendToPVS(const char*);
void terminate();
int findVariable(const char*, const char*);
void convertStringtoDouble(int, int);
void convertDoubletoString(int, double, int);

#endif // FMU_H
