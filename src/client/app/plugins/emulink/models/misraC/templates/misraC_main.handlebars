{{&descriptor}}

/**
 * Example main for testing {{filename}}
 */

#include "{{filename}}.h"

const char* function_names[] = { {{#each functions}}
    "{{name}}"{{#unless @last}}, {{/unless}} //-- id: {{id}}{{/each}}
};
UC_8* mode_names[] = { {{#each modes}}
    (UC_8*) "{{this}}"{{#unless @last}}, {{/unless}}{{/each}}
};
void print_menu() {
    printf("List of functions:\n");
    int i = 0;
    while(i < {{functions.length}}){
        printf("%d - %s\n", i, function_names[i]);
        i++;
    }
    printf("e - Exit\n");
    printf("Select trigger: ");
}

int main() {

    State s;
    init(&s);

    printf("Initialised, current mode: %s \n-------\n", mode_names[s.mode]);

    while(true){
        print_menu();
        int t = 0;
        if( scanf("%d",&t) != 1 ){
            return 1;
        } else {
            switch (t) { {{#each functions}}
                case ({{id}}): {
                    if (per_{{name}}(&s)) {
                        {{name}}(&s);
                        printf("Function %s executed!\nCurrent system mode: %s \n\n", function_names[t], mode_names[s.mode]);
                    } else {
                        printf("Function %s cannot be executed in the current system mode.\n\n", function_names[t]);
                    }
                    break;
                }{{/each}}
                default: { printf("Out of range, please try again.\n\n"); }
            }
        }
    }
    return 0;
}

{{&disclaimer}}
