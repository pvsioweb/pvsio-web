{{#if template_description}}
%
%   Description: This template generates PVS utility functions for entering and exiting modes,
%                as well as a block COND-ENDCOND for actions to be performed when entering or exiting a mode
%
{{/if}}  %-- leave/enter functions
  {{enter}}(m: {{{current_mode.type}}})(st: {{state_type}}): {{state_type}} = {{#if entry_actions}}
    LET st = st WITH [ {{{current_mode.name}}} := m ]
     IN COND %-- entry actions{{#each entry_actions}}
         {{{../current_mode.name}}}(st) = {{state}}
           -> LET {{#each action_sequence}}st = st WITH [ {{#if variable_name_l2}}{{variable_name}} := {{variable_name}}(st) WITH [ {{variable_name_l2}} := {{override_expression}} ]]{{
                               else}}{{variable_name}} := {{override_expression}} ]{{/if}}{{#unless @last}},{{/unless}}
              {{/each}} IN st,
           ELSE -> st{{/each}}
        ENDCOND{{else
  }}st WITH [ {{{current_mode.name}}} := m ]{{/if}}{{#if previous_mode}}
  {{leave}}(m: {{{current_mode.type}}})(st: {{state_type}}): {{state_type}} = {{#if leave_actions}}
    LET st = st WITH [ {{{current_mode.name}}} := m ]
     IN COND %-- entry actions{{#each leave_actions}}
         {{{../current_mode.name}}}(st) = {{state}}
           -> LET {{#each action_sequence}}st = st WITH [ {{#if variable_name_l2}}{{variable_name}} := {{variable_name}}(st) WITH [ {{variable_name_l2}} := {{override_expression}} ]]{{
                               else}}{{variable_name}} := {{override_expression}} ]{{/if}}{{#unless @last}},{{/unless}}
              {{/each}} IN st,
           ELSE -> st{{/each}}
        ENDCOND{{else
  }}st WITH [ {{{current_mode.name}}} := m ]{{/if}}{{else}}
  {{leave}}(m: {{{current_mode.type}}})(st: {{state_type}}): {{state_type}} = st
  {{/if}}
