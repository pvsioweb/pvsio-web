{{#if template_description}}
%
%   Description: This template generates PVS functions corresponding to emucharts transitions between states (modes) of the system.
%                Each transition function is in the form
%                  foo(st: (per_foo)): State =
%                    COND
%                      ...
%                    ENDCOND
%                Predicate per_foo is the permission function. It is used to restrict the domain of the function to the subset of
%                states/conditions for which foo is defined.
%                A flag in this template (full_coverage) enables the introduction of the ELSE case in COND-ENDCOND. This is useful for
%                safer evaluation of the PVS functions in PVSio (which produces a random evaluation if the actual value of a function argument
%                is not covered by any case in the COND-ENDCOND construct.) With the full_coverage flag enabled, however, the typechecker
%                won't be able to check coverage of conditions.
%
{{/if}}{{#if comment}}  %-- {{comment}}{{/if}}
{{#each functions}}  per_{{name}}(st: State): bool = {{#each cases}}({{cond}}){{#unless @last}} OR
    {{/unless}}{{/each}}
  {{name}}(st: (per_{{name}})): State =
    COND{{#each cases}}
    {{cond}}
     -> LET st = leave_state({{from}})(st){{#if actions}},{{#each actions}}{{#if local_binding}}
            {{name}} = {{value}} %-- local binding{{else}}
            st = st WITH [ {{#if l1_name}}{{l1_name}} := {{l1_name}}(st) WITH [ {{l2_name}} := {{value}} ]]{{
                              else}}{{name}} := {{value}} ]{{/if}}{{/if}}{{#unless @last}},{{/unless}}{{/each}}{{/if}}
         IN enter_into({{to}})(st){{#unless @last}},{{/unless}}{{/each}}{{#if ../full_coverage}},
     ELSE -> st{{/if}}
    ENDCOND{{#unless @last}}

{{/unless}}{{/each}}
