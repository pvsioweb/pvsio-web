("main" main push_plunger_contrast_TCC2 0 (push_plunger_contrast_TCC2-1 nil 3705346806 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main push_plunger_saline_TCC2 0 (push_plunger_saline_TCC2-1 nil 3705346806 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main manual_pull_plunger_contrast_TCC1 0 (manual_pull_plunger_contrast_TCC1-1 nil 3705396989 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main manual_pull_plunger_saline_TCC1 0 (manual_pull_plunger_saline_TCC1-1 nil 3705396989 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main DEFAULT_VOLUME_CONTRAST_TCC1 0 (DEFAULT_VOLUME_CONTRAST_TCC1-1 nil 3705346664 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil)) nil))("main" main push_plunger_contrast_TCC2 0 (push_plunger_contrast_TCC2-1 nil 3706185868 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main push_plunger_saline_TCC2 0 (push_plunger_saline_TCC2-1 nil 3706185868 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main auto_plunger_contrast_TCC9 0 (auto_plunger_contrast_TCC9-1 nil 3706185868 ("" (cond-coverage-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (<= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (MAX_VOLUME const-decl "nat" main nil) (Volume type-eq-decl nil main nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil)) nil))("main" main auto_plunger_contrast_TCC8 0 (auto_plunger_contrast_TCC8-1 nil 3706185868 ("" (cond-disjoint-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (<= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (MAX_VOLUME const-decl "nat" main nil) (Volume type-eq-decl nil main nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil)) nil))("main" main auto_plunger_saline_TCC9 0 (auto_plunger_saline_TCC9-1 nil 3706185854 ("" (cond-coverage-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (<= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (MAX_VOLUME const-decl "nat" main nil) (Volume type-eq-decl nil main nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil)) nil))("main" main auto_plunger_saline_TCC8 0 (auto_plunger_saline_TCC8-1 nil 3706185854 ("" (cond-disjoint-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (<= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (MAX_VOLUME const-decl "nat" main nil) (Volume type-eq-decl nil main nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil)) nil))("main" main auto_plunger_saline_TCC7 0 (auto_plunger_saline_TCC7-1 nil 3706185854 ("" (subtype-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (<= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (Volume type-eq-decl nil main nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (int_minus_int_is_int application-judgement "int" integers nil) (MAX_VOLUME const-decl "nat" main nil)) nil))("main" main auto_plunger_saline_TCC6 0 (auto_plunger_saline_TCC6-1 nil 3706185854 ("" (grind) (("1" (all-typepreds) (("1" (assert) nil nil)) nil) ("2" (all-typepreds) (("2" (assert) nil nil)) nil) ("3" (all-typepreds) (("3" (assert) nil nil)) nil)) nil) ((AutoloadMode type-decl nil main nil) (Button type-decl nil main nil) (nonneg_real nonempty-type-eq-decl nil real_types nil) (ConsoleButton type-decl nil main nil) (Led type-decl nil main nil) (Protocol type-decl nil main nil) (Rate type-eq-decl nil main nil) (ConsoleScreen type-decl nil main nil) (Time type-eq-decl nil main nil) (Display type-decl nil main nil) (Mode type-decl nil main nil) (state type-eq-decl nil main nil) (> const-decl "bool" reals nil) (strict_total_order? const-decl "bool" orders nil) (pred type-eq-decl nil defined_types nil) (even? const-decl "bool" integers nil) (total_order? const-decl "bool" orders nil) (minus_odd_is_odd application-judgement "odd_int" integers nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (int_minus_int_is_int application-judgement "int" integers nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (<= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (Volume type-eq-decl nil main nil) (MAX_VOLUME const-decl "nat" main nil)) nil))("main" main set_autoload_mode_saline_TCC1 0 (set_autoload_mode_saline_TCC1-1 nil 3706185671 ("" (cond-disjoint-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (<= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (MAX_VOLUME const-decl "nat" main nil) (Volume type-eq-decl nil main nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil)) nil))("main" main auto_plunger_saline_TCC5 0 (auto_plunger_saline_TCC5-1 nil 3706185854 ("" (subtype-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (<= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (Volume type-eq-decl nil main nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers nil) (MAX_VOLUME const-decl "nat" main nil)) nil))("main" main auto_plunger_contrast_TCC7 0 (auto_plunger_contrast_TCC7-1 nil 3706185868 ("" (subtype-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (<= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (MAX_VOLUME const-decl "nat" main nil) (Volume type-eq-decl nil main nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil)) nil))("main" main auto_plunger_contrast_TCC6 0 (auto_plunger_contrast_TCC6-1 nil 3706185868 ("" (grind) (("1" (all-typepreds) (("1" (assert) nil nil)) nil) ("2" (all-typepreds) (("2" (assert) nil nil)) nil) ("3" (all-typepreds) (("3" (assert) nil nil)) nil)) nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (<= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (MAX_VOLUME const-decl "nat" main nil) (Volume type-eq-decl nil main nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil)) nil))("main" main auto_plunger_contrast_TCC5 0 (auto_plunger_contrast_TCC5-1 nil 3706185868 ("" (subtype-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (<= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (Volume type-eq-decl nil main nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (int_minus_int_is_int application-judgement "int" integers nil) (MAX_VOLUME const-decl "nat" main nil)) nil))("main" main set_autoload_mode_contrast_TCC1 0 (set_autoload_mode_contrast_TCC1-1 nil 3706185671 ("" (cond-disjoint-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (<= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (MAX_VOLUME const-decl "nat" main nil) (Volume type-eq-decl nil main nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil)) nil))("main" main push_plunger_contrast_TCC2 0 (push_plunger_contrast_TCC2-1 nil 3706188048 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main push_plunger_saline_TCC2 0 (push_plunger_saline_TCC2-1 nil 3706188048 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main empty_contrast_TCC2 0 (empty_contrast_TCC2-1 nil 3706188048 ("" (subtype-tcc) nil nil) ((per_empty_contrast const-decl "bool" main nil) (MAX_VOLUME const-decl "nat" main nil)) nil))("main" main empty_saline_TCC2 0 (empty_saline_TCC2-1 nil 3706188048 ("" (subtype-tcc) nil nil) ((per_empty_saline const-decl "bool" main nil) (MAX_VOLUME const-decl "nat" main nil)) nil))("main" main push_plunger_contrast_TCC2 0 (push_plunger_contrast_TCC2-1 nil 3706191444 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main push_plunger_saline_TCC2 0 (push_plunger_saline_TCC2-1 nil 3706191444 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main prime_syringes_TCC6 0 (prime_syringes_TCC6-1 nil 3706191444 ("" (grind) (("1" (all-typepreds) (("1" (assert) nil nil)) nil) ("2" (all-typepreds) (("2" (assert) nil nil)) nil) ("3" (all-typepreds) (("3" (assert) nil nil)) nil) ("4" (all-typepreds) (("4" (assert) nil nil)) nil) ("5" (all-typepreds) (("5" (assert) nil nil)) nil) ("6" (all-typepreds) (("6" (assert) nil nil)) nil) ("7" (all-typepreds) (("7" (assert) nil nil)) nil) ("8" (all-typepreds) (("8" (assert) nil nil)) nil)) nil) ((even? const-decl "bool" integers nil) (> const-decl "bool" reals nil) (strict_total_order? const-decl "bool" orders nil) (pred type-eq-decl nil defined_types nil) (odd? const-decl "bool" integers nil) (total_order? const-decl "bool" orders nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (int_minus_int_is_int application-judgement "int" integers nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (<= const-decl "bool" reals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (AutoloadMode type-decl nil main nil) (Button type-decl nil main nil) (nonneg_real nonempty-type-eq-decl nil real_types nil) (ConsoleButton type-decl nil main nil) (Led type-decl nil main nil) (Protocol type-decl nil main nil) (Rate type-eq-decl nil main nil) (ConsoleScreen type-decl nil main nil) (Time type-eq-decl nil main nil) (Volume type-eq-decl nil main nil) (Display type-decl nil main nil) (Mode type-decl nil main nil) (state type-eq-decl nil main nil) (per_prime_syringes const-decl "bool" main nil) (MAX_VOLUME const-decl "nat" main nil)) nil))("main" main prime_syringes_TCC5 0 (prime_syringes_TCC5-1 nil 3706191444 ("" (grind) (("1" (all-typepreds) (("1" (assert) nil nil)) nil) ("2" (all-typepreds) (("2" (assert) nil nil)) nil) ("3" (all-typepreds) (("3" (assert) nil nil)) nil) ("4" (all-typepreds) (("4" (assert) nil nil)) nil)) nil) ((even? const-decl "bool" integers nil) (> const-decl "bool" reals nil) (strict_total_order? const-decl "bool" orders nil) (pred type-eq-decl nil defined_types nil) (odd? const-decl "bool" integers nil) (total_order? const-decl "bool" orders nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (int_minus_int_is_int application-judgement "int" integers nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (<= const-decl "bool" reals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (AutoloadMode type-decl nil main nil) (Button type-decl nil main nil) (nonneg_real nonempty-type-eq-decl nil real_types nil) (ConsoleButton type-decl nil main nil) (Led type-decl nil main nil) (Protocol type-decl nil main nil) (Rate type-eq-decl nil main nil) (ConsoleScreen type-decl nil main nil) (Time type-eq-decl nil main nil) (Volume type-eq-decl nil main nil) (Display type-decl nil main nil) (Mode type-decl nil main nil) (state type-eq-decl nil main nil) (per_prime_syringes const-decl "bool" main nil) (MAX_VOLUME const-decl "nat" main nil)) nil))("main" main push_plunger_contrast_TCC2 0 (push_plunger_contrast_TCC2-1 nil 3709399888 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main push_plunger_saline_TCC2 0 (push_plunger_saline_TCC2-1 nil 3709399888 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main prime_syringes_TCC6 0 (prime_syringes_TCC6-1 nil 3709399888 ("" (skosimp*) (("" (all-typepreds) (("" (assert) nil nil)) nil)) nil) ((int_minus_int_is_int application-judgement "int" integers nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (>= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (MAX_VOLUME const-decl "nat" main nil) (<= const-decl "bool" reals nil) (total_order? const-decl "bool" orders nil) (pred type-eq-decl nil defined_types nil) (AutoloadMode type-decl nil main nil) (Button type-decl nil main nil) (nonneg_real nonempty-type-eq-decl nil real_types nil) (ConsoleButton type-decl nil main nil) (Led type-decl nil main nil) (Protocol type-decl nil main nil) (Rate type-eq-decl nil main nil) (ConsoleScreen type-decl nil main nil) (Time type-eq-decl nil main nil) (Volume type-eq-decl nil main nil) (Display type-decl nil main nil) (Mode type-decl nil main nil) (state type-eq-decl nil main nil) (per_prime_syringes const-decl "bool" main nil) (odd? const-decl "bool" integers nil) (> const-decl "bool" reals nil) (even? const-decl "bool" integers nil) (PRIME_VOLUME const-decl "Volume" main nil) (strict_total_order? const-decl "bool" orders nil)) nil))("main" main prime_syringes_TCC5 0 (prime_syringes_TCC5-1 nil 3709399888 ("" (skosimp*) (("" (all-typepreds) (("" (assert) nil nil)) nil)) nil) ((int_minus_int_is_int application-judgement "int" integers nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (>= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (MAX_VOLUME const-decl "nat" main nil) (<= const-decl "bool" reals nil) (total_order? const-decl "bool" orders nil) (pred type-eq-decl nil defined_types nil) (AutoloadMode type-decl nil main nil) (Button type-decl nil main nil) (nonneg_real nonempty-type-eq-decl nil real_types nil) (ConsoleButton type-decl nil main nil) (Led type-decl nil main nil) (Protocol type-decl nil main nil) (Rate type-eq-decl nil main nil) (ConsoleScreen type-decl nil main nil) (Time type-eq-decl nil main nil) (Volume type-eq-decl nil main nil) (Display type-decl nil main nil) (Mode type-decl nil main nil) (state type-eq-decl nil main nil) (per_prime_syringes const-decl "bool" main nil) (odd? const-decl "bool" integers nil) (> const-decl "bool" reals nil) (even? const-decl "bool" integers nil) (PRIME_VOLUME const-decl "Volume" main nil) (strict_total_order? const-decl "bool" orders nil)) nil))("main" main empty_contrast_TCC2 0 (empty_contrast_TCC2-1 nil 3709399888 ("" (subtype-tcc) nil nil) ((per_empty_contrast const-decl "bool" main nil) (MAX_VOLUME const-decl "nat" main nil)) nil))("main" main empty_saline_TCC2 0 (empty_saline_TCC2-1 nil 3709399888 ("" (subtype-tcc) nil nil) ((per_empty_saline const-decl "bool" main nil) (MAX_VOLUME const-decl "nat" main nil)) nil))("main" main step_TCC1 0 (step_TCC1-1 nil 3709399710 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil)) nil))("main" main PRIME_VOLUME_TCC1 0 (PRIME_VOLUME_TCC1-1 nil 3709397869 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil)) nil))("main" main push_plunger_contrast_TCC2 0 (push_plunger_contrast_TCC2-1 nil 3709404700 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main push_plunger_saline_TCC2 0 (push_plunger_saline_TCC2-1 nil 3709404700 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main prime_syringes_TCC8 0 (prime_syringes_TCC8-1 nil 3709404700 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main prime_syringes_TCC7 0 (prime_syringes_TCC7-1 nil 3709404700 ("" (skosimp*) (("" (all-typepreds) (("" (assert) nil nil)) nil)) nil) ((real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (int_minus_int_is_int application-judgement "int" integers nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (>= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (MAX_VOLUME const-decl "nat" main nil) (<= const-decl "bool" reals nil) (total_order? const-decl "bool" orders nil) (pred type-eq-decl nil defined_types nil) (AutoloadMode type-decl nil main nil) (Button type-decl nil main nil) (nonneg_real nonempty-type-eq-decl nil real_types nil) (ConsoleButton type-decl nil main nil) (Led type-decl nil main nil) (Protocol type-decl nil main nil) (Rate type-eq-decl nil main nil) (ConsoleScreen type-decl nil main nil) (Time type-eq-decl nil main nil) (Volume type-eq-decl nil main nil) (Display type-decl nil main nil) (Mode type-decl nil main nil) (state type-eq-decl nil main nil) (per_prime_syringes const-decl "bool" main nil) (even? const-decl "bool" integers nil) (odd? const-decl "bool" integers nil) (> const-decl "bool" reals nil) (strict_total_order? const-decl "bool" orders nil)) nil))("main" main prime_syringes_TCC6 0 (prime_syringes_TCC6-1 nil 3709404700 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main prime_syringes_TCC5 0 (prime_syringes_TCC5-1 nil 3709404700 ("" (skosimp*) (("" (all-typepreds) (("" (assert) nil nil)) nil)) nil) ((real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (int_minus_int_is_int application-judgement "int" integers nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (>= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (MAX_VOLUME const-decl "nat" main nil) (<= const-decl "bool" reals nil) (total_order? const-decl "bool" orders nil) (pred type-eq-decl nil defined_types nil) (AutoloadMode type-decl nil main nil) (Button type-decl nil main nil) (nonneg_real nonempty-type-eq-decl nil real_types nil) (ConsoleButton type-decl nil main nil) (Led type-decl nil main nil) (Protocol type-decl nil main nil) (Rate type-eq-decl nil main nil) (ConsoleScreen type-decl nil main nil) (Time type-eq-decl nil main nil) (Volume type-eq-decl nil main nil) (Display type-decl nil main nil) (Mode type-decl nil main nil) (state type-eq-decl nil main nil) (per_prime_syringes const-decl "bool" main nil) (even? const-decl "bool" integers nil) (odd? const-decl "bool" integers nil) (> const-decl "bool" reals nil) (strict_total_order? const-decl "bool" orders nil)) nil))("main" main tick_TCC6 0 (tick_TCC6-1 nil 3709399888 ("" (cond-disjoint-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (AutoloadMode type-decl nil main nil) (Button type-decl nil main nil) (real nonempty-type-from-decl nil reals nil) (nonneg_real nonempty-type-eq-decl nil real_types nil) (ConsoleButton type-decl nil main nil) (Led type-decl nil main nil) (Protocol type-decl nil main nil) (Rate type-eq-decl nil main nil) (ConsoleScreen type-decl nil main nil) (Time type-eq-decl nil main nil) (Volume type-eq-decl nil main nil) (Display type-decl nil main nil) (Mode type-decl nil main nil) (state type-eq-decl nil main nil) (per_tick const-decl "bool" main nil)) nil))("main" main set_btn_colors_TCC2 0 (set_btn_colors_TCC2-1 nil 3705346664 ("" (cond-coverage-tcc) nil nil) nil nil))("main" main set_btn_colors_TCC1 0 (set_btn_colors_TCC1-1 nil 3705346664 ("" (cond-disjoint-tcc) nil nil) nil nil))("main" main init_TCC4 0 (init_TCC4-1 nil 3706185671 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil)) nil))("main" main init_TCC3 0 (init_TCC3-1 nil 3706185671 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil)) nil))("main" main prime_syringes_TCC7 0 (prime_syringes_TCC7-1 nil 3709404700 ("" (skosimp*) (("" (all-typepreds) (("" (assert) nil nil)) nil)) nil) ((real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (int_minus_int_is_int application-judgement "int" integers nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (>= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (MAX_VOLUME const-decl "nat" main nil) (<= const-decl "bool" reals nil) (total_order? const-decl "bool" orders nil) (pred type-eq-decl nil defined_types nil) (AutoloadMode type-decl nil main nil) (LED type-decl nil main nil) (nonneg_real nonempty-type-eq-decl nil real_types nil) (ConsoleButton type-decl nil main nil) (ConsoleCMD type-decl nil main nil) (ConsoleDLG type-decl nil main nil) (ConsoleLED type-decl nil main nil) (Protocol type-decl nil main nil) (Rate type-eq-decl nil main nil) (ConsoleScreen type-decl nil main nil) (Time type-eq-decl nil main nil) (Volume type-eq-decl nil main nil) (Display type-decl nil main nil) (Mode type-decl nil main nil) (state type-eq-decl nil main nil) (per_prime_syringes const-decl "bool" main nil) (even? const-decl "bool" integers nil) (odd? const-decl "bool" integers nil) (> const-decl "bool" reals nil) (strict_total_order? const-decl "bool" orders nil)) nil))("main" main prime_syringes_TCC5 0 (prime_syringes_TCC5-1 nil 3709404700 ("" (skosimp*) (("" (all-typepreds) (("" (assert) nil nil)) nil)) nil) ((real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (int_minus_int_is_int application-judgement "int" integers nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (>= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (MAX_VOLUME const-decl "nat" main nil) (<= const-decl "bool" reals nil) (total_order? const-decl "bool" orders nil) (pred type-eq-decl nil defined_types nil) (AutoloadMode type-decl nil main nil) (LED type-decl nil main nil) (nonneg_real nonempty-type-eq-decl nil real_types nil) (ConsoleButton type-decl nil main nil) (ConsoleCMD type-decl nil main nil) (ConsoleDLG type-decl nil main nil) (ConsoleLED type-decl nil main nil) (Protocol type-decl nil main nil) (Rate type-eq-decl nil main nil) (ConsoleScreen type-decl nil main nil) (Time type-eq-decl nil main nil) (Volume type-eq-decl nil main nil) (Display type-decl nil main nil) (Mode type-decl nil main nil) (state type-eq-decl nil main nil) (per_prime_syringes const-decl "bool" main nil) (even? const-decl "bool" integers nil) (odd? const-decl "bool" integers nil) (> const-decl "bool" reals nil) (strict_total_order? const-decl "bool" orders nil)) nil))("main" main empty_contrast_TCC2 0 (empty_contrast_TCC2-1 nil 3709622517 ("" (subtype-tcc) nil nil) ((per_empty_contrast const-decl "bool" main nil) (MAX_VOLUME const-decl "nat" main nil)) nil))("main" main empty_saline_TCC2 0 (empty_saline_TCC2-1 nil 3709622517 ("" (subtype-tcc) nil nil) ((per_empty_saline const-decl "bool" main nil) (MAX_VOLUME const-decl "nat" main nil)) nil))("main" main set_LED_state_TCC3 0 (set_LED_state_TCC3-1 nil 3709620625 ("" (cond-coverage-tcc) nil nil) nil nil))("main" main click_btn_start_TCC1 0 (click_btn_start_TCC1-1 nil 3709810518 ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil)) nil))("main" main tick_TCC13 0 (tick_TCC13-1 nil 3709810179 ("" (cond-disjoint-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (AutoloadMode type-decl nil main nil) (LED type-decl nil main nil) (real nonempty-type-from-decl nil reals nil) (nonneg_real nonempty-type-eq-decl nil real_types nil) (ConsoleButton type-decl nil main nil) (ConsoleCMD type-decl nil main nil) (ConsoleDLG type-decl nil main nil) (ConsoleLED type-decl nil main nil) (Protocol type-decl nil main nil) (Rate type-eq-decl nil main nil) (ConsoleScreen type-decl nil main nil) (Time type-eq-decl nil main nil) (Volume type-eq-decl nil main nil) (Display type-decl nil main nil) (InfuseMode type-decl nil main nil) (Mode type-decl nil main nil) (state type-eq-decl nil main nil) (per_tick const-decl "bool" main nil)) nil))("main" main tick_TCC12 0 (tick_TCC12-1 nil 3709810179 ("" (cond-disjoint-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (AutoloadMode type-decl nil main nil) (LED type-decl nil main nil) (real nonempty-type-from-decl nil reals nil) (nonneg_real nonempty-type-eq-decl nil real_types nil) (ConsoleButton type-decl nil main nil) (ConsoleCMD type-decl nil main nil) (ConsoleDLG type-decl nil main nil) (ConsoleLED type-decl nil main nil) (Protocol type-decl nil main nil) (Rate type-eq-decl nil main nil) (ConsoleScreen type-decl nil main nil) (Time type-eq-decl nil main nil) (Volume type-eq-decl nil main nil) (Display type-decl nil main nil) (InfuseMode type-decl nil main nil) (Mode type-decl nil main nil) (state type-eq-decl nil main nil) (per_tick const-decl "bool" main nil) (real_lt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil)) nil))("main" main prime_syringes_TCC7 0 (prime_syringes_TCC7-1 nil 3709404700 ("" (skosimp*) (("" (all-typepreds) (("" (assert) nil nil)) nil)) nil) ((real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (int_minus_int_is_int application-judgement "int" integers nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (>= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (MAX_VOLUME const-decl "nat" main nil) (<= const-decl "bool" reals nil) (total_order? const-decl "bool" orders nil) (pred type-eq-decl nil defined_types nil) (AutoloadMode type-decl nil main nil) (LED type-decl nil main nil) (nonneg_real nonempty-type-eq-decl nil real_types nil) (ConsoleButton type-decl nil main nil) (ConsoleCMD type-decl nil main nil) (ConsoleDLG type-decl nil main nil) (ConsoleLED type-decl nil main nil) (Protocol type-decl nil main nil) (Rate type-eq-decl nil main nil) (ConsoleScreen type-decl nil main nil) (Time type-eq-decl nil main nil) (Volume type-eq-decl nil main nil) (Display type-decl nil main nil) (InfuseMode type-decl nil main nil) (Mode type-decl nil main nil) (state type-eq-decl nil main nil) (per_prime_syringes const-decl "bool" main nil) (even? const-decl "bool" integers nil) (odd? const-decl "bool" integers nil) (> const-decl "bool" reals nil) (strict_total_order? const-decl "bool" orders nil)) nil))("main" main prime_syringes_TCC5 0 (prime_syringes_TCC5-1 nil 3709404700 ("" (skosimp*) (("" (all-typepreds) (("" (assert) nil nil)) nil)) nil) ((real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (int_minus_int_is_int application-judgement "int" integers nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (>= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (MAX_VOLUME const-decl "nat" main nil) (<= const-decl "bool" reals nil) (total_order? const-decl "bool" orders nil) (pred type-eq-decl nil defined_types nil) (AutoloadMode type-decl nil main nil) (LED type-decl nil main nil) (nonneg_real nonempty-type-eq-decl nil real_types nil) (ConsoleButton type-decl nil main nil) (ConsoleCMD type-decl nil main nil) (ConsoleDLG type-decl nil main nil) (ConsoleLED type-decl nil main nil) (Protocol type-decl nil main nil) (Rate type-eq-decl nil main nil) (ConsoleScreen type-decl nil main nil) (Time type-eq-decl nil main nil) (Volume type-eq-decl nil main nil) (Display type-decl nil main nil) (InfuseMode type-decl nil main nil) (Mode type-decl nil main nil) (state type-eq-decl nil main nil) (per_prime_syringes const-decl "bool" main nil) (even? const-decl "bool" integers nil) (odd? const-decl "bool" integers nil) (> const-decl "bool" reals nil) (strict_total_order? const-decl "bool" orders nil)) nil))