%% TCCs associated with theory bbraun_space
%% This file was automatically generated by PVS, please **do not modify** by hand.
bbraun_space_TCCS: THEORY BEGIN

% Subtype TCC generated (at line 40, column 14) for  0
	% expected type  bbraun_real
	  % untried
	init_TCC1: OBLIGATION
	0 <= max
	
	% The subtype TCC (at line 38, column 14) in decl nil for
	% term generated from init  0
	% expected type  bbraun_real
	% The subtype TCC (at line 39, column 14) in decl nil for
	% term generated from init  0
	% expected type  bbraun_real
	% Subtype TCC generated (at line 65, column 51) for  new_vtbi
	% expected type  bbraun_real
	  % untried
	bbraun_tick_TCC1: OBLIGATION
	FORALL (st: State):
	         int2boolean(st`on) AND int2boolean(st`inf) AND (st`d > 0)
	     AND (st`v > 0) AND (st`r > 0)
	     IMPLIES
	     FORALL (new_vtbi: real):
	       new_vtbi = IF st`v - st`r > 0 THEN st`v - st`r ELSE 0 ENDIF IMPLIES
	        new_vtbi >= 0 AND new_vtbi <= max
	
	% The subtype TCC (at line 38, column 14) in decl nil for
	 % term generated from init  0
	    % expected type  bbraun_real
	  % is subsumed by init_TCC1
	% The subtype TCC (at line 39, column 14) in decl nil for
	 % term generated from init  0
	    % expected type  bbraun_real
	  % is subsumed by init_TCC1
	
	% The subtype TCC (at line 65, column 36) in decl nil for
	% term generated from bbraun_tick  new_vtbi
	% expected type  bbraun_real
	% Subtype TCC generated (at line 71, column 34) for  ^(10, i)
	% expected type  bbraun_real
	  % untried
	pow10_TCC1: OBLIGATION
	FORALL (i: Cursor): ^(10, i) <= max
	
	% The subtype TCC (at line 65, column 36) in decl nil for
	 % term generated from bbraun_tick  new_vtbi
	    % expected type  bbraun_real
	  % is subsumed by bbraun_tick_TCC1
	
	% Subtype TCC generated (at line 75, column 44) for  1
	% expected type  bbraun_real
	  % untried
	min_value_TCC1: OBLIGATION
	FORALL (st: State, i: Cursor, val: bbraun_real):
	    i = st`c AND val = st`d AND i >= 3 AND val >= 1 IMPLIES 1 <= max
	
	% Subtype TCC generated (at line 77, column 44) for  0.1
	% expected type  bbraun_real
	  % untried
	min_value_TCC2: OBLIGATION
	FORALL (st: State, i: Cursor, val: bbraun_real):
	    i = st`c AND
	     val = st`d AND
	      NOT (i >= 3 AND val >= 1) AND
	       ((i >= 0 AND i < 3) OR (i < 0 AND val >= 0.1))
	     IMPLIES 0.1 <= max
	
	% The subtype TCC (at line 77, column 53) in decl nil for
	% term generated from min_value  0
	% expected type  bbraun_real
	% Disjointness TCC generated (at line 81, column 4) for
	% COND val < 100 -> -2,
	%      val >= 100 AND val < 1000 -> -1,
	%      val >= 1000 -> 0
	% ENDCOND
	  % untried
	min_position_TCC1: OBLIGATION
	FORALL (st: State, val: bbraun_real):
	    val = st`d IMPLIES
	     NOT (val < 100 AND val >= 100 AND val < 1000) AND
	      NOT (val < 100 AND val >= 1000) AND
	       NOT ((val >= 100 AND val < 1000) AND val >= 1000)
	
	% The subtype TCC (at line 77, column 53) in decl nil for
	 % term generated from min_value  0
	    % expected type  bbraun_real
	  % is subsumed by init_TCC1
	
	% Coverage TCC generated (at line 81, column 4) for
	% COND val < 100 -> -2,
	%      val >= 100 AND val < 1000 -> -1,
	%      val >= 1000 -> 0
	% ENDCOND
	  % untried
	min_position_TCC2: OBLIGATION
	FORALL (st: State, val: bbraun_real):
	    val = st`d IMPLIES val < 100 OR val >= 100 AND val < 1000 OR val >= 1000
	
	% Subtype TCC generated (at line 107, column 44) for  new_val
	% expected type  bbraun_real
	  % untried
	dn_TCC1: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory,
	          min_val: bbraun_real, new_val: real, new_mem: Memory):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (min_val = min_value(st)) AND (new_val = val - pow10(i))
	     AND (new_mem = IF i >= 0 THEN mem(pow10(i)) ELSE mem ENDIF)
	     AND (NOT val <= min_val) AND (val > min_val) AND (NOT new_val = 0)
	     AND (new_val /= 0) AND (new_val >= min_val)
	     IMPLIES
	     FORALL (new_val1: real):
	       new_val1 = limit(min_val)(new_val) AND NOT valid?(mem) IMPLIES
	        new_val1 >= 0 AND new_val1 <= max
	
	% Disjointness TCC generated (at line 103, column 17) for
	% COND new_val = 0 -> st WITH [d := 0, c := i, m := NA],
	%      new_val /= 0 AND new_val >= min_val ->
	%        LET new_val = limit(min_val)(new_val) IN
	%          IF valid?(mem)
	%            THEN st WITH [d := value(mem), c := i, m := NA]
	%          ELSE st WITH [d := new_val, c := i, m := NA]
	%          ENDIF,
	%      new_val /= 0 AND new_val < min_val ->
	%        IF valid?(mem) THEN st WITH [d := min_val, c := i, m := NA]
	%        ELSE st WITH [d := min_val, c := i, m := new_mem]
	%        ENDIF
	% ENDCOND
	  % untried
	dn_TCC2: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory,
	          min_val: bbraun_real, new_val: real, new_mem: Memory):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (min_val = min_value(st)) AND (new_val = val - pow10(i))
	     AND (new_mem = IF i >= 0 THEN mem(pow10(i)) ELSE mem ENDIF)
	     AND (NOT val <= min_val) AND (val > min_val)
	     IMPLIES
	     NOT (new_val = 0 AND new_val /= 0 AND new_val >= min_val) AND
	      NOT (new_val = 0 AND new_val /= 0 AND new_val < min_val) AND
	       NOT ((new_val /= 0 AND new_val >= min_val) AND
	             new_val /= 0 AND new_val < min_val)
	
	% Coverage TCC generated (at line 103, column 17) for
	% COND new_val = 0 -> st WITH [d := 0, c := i, m := NA],
	%      new_val /= 0 AND new_val >= min_val ->
	%        LET new_val = limit(min_val)(new_val) IN
	%          IF valid?(mem)
	%            THEN st WITH [d := value(mem), c := i, m := NA]
	%          ELSE st WITH [d := new_val, c := i, m := NA]
	%          ENDIF,
	%      new_val /= 0 AND new_val < min_val ->
	%        IF valid?(mem) THEN st WITH [d := min_val, c := i, m := NA]
	%        ELSE st WITH [d := min_val, c := i, m := new_mem]
	%        ENDIF
	% ENDCOND
	  % untried
	dn_TCC3: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory,
	          min_val: bbraun_real, new_val: real, new_mem: Memory):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (min_val = min_value(st)) AND (new_val = val - pow10(i))
	     AND (new_mem = IF i >= 0 THEN mem(pow10(i)) ELSE mem ENDIF)
	     AND (NOT val <= min_val) AND (val > min_val)
	     IMPLIES
	     new_val = 0 OR
	      new_val /= 0 AND new_val >= min_val OR new_val /= 0 AND new_val < min_val
	
	% Subtype TCC generated (at line 107, column 44) for  new_val
	% expected type  bbraun_real
	  % untried
	dn_TCC4: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory,
	          min_val: bbraun_real, new_val: real, new_mem: Memory):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (min_val = min_value(st)) AND (new_val = val - pow10(i))
	     AND (new_mem = IF i >= 0 THEN mem(pow10(i)) ELSE mem ENDIF)
	     AND (NOT val <= min_val) AND (NOT val > min_val) AND (NOT new_val = 0)
	     AND (new_val /= 0) AND (new_val >= min_val)
	     IMPLIES
	     FORALL (new_val1: real):
	       new_val1 = limit(min_val)(new_val) AND NOT valid?(mem) IMPLIES
	        new_val1 >= 0 AND new_val1 <= max
	
	% Disjointness TCC generated (at line 103, column 17) for
	% COND new_val = 0 -> st WITH [d := 0, c := i, m := NA],
	%      new_val /= 0 AND new_val >= min_val ->
	%        LET new_val = limit(min_val)(new_val) IN
	%          IF valid?(mem)
	%            THEN st WITH [d := value(mem), c := i, m := NA]
	%          ELSE st WITH [d := new_val, c := i, m := NA]
	%          ENDIF,
	%      new_val /= 0 AND new_val < min_val ->
	%        IF valid?(mem) THEN st WITH [d := min_val, c := i, m := NA]
	%        ELSE st WITH [d := min_val, c := i, m := new_mem]
	%        ENDIF
	% ENDCOND
	  % untried
	dn_TCC5: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory,
	          min_val: bbraun_real, new_val: real, new_mem: Memory):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (min_val = min_value(st)) AND (new_val = val - pow10(i))
	     AND (new_mem = IF i >= 0 THEN mem(pow10(i)) ELSE mem ENDIF)
	     AND (NOT val <= min_val) AND NOT val > min_val
	     IMPLIES
	     NOT (new_val = 0 AND new_val /= 0 AND new_val >= min_val) AND
	      NOT (new_val = 0 AND new_val /= 0 AND new_val < min_val) AND
	       NOT ((new_val /= 0 AND new_val >= min_val) AND
	             new_val /= 0 AND new_val < min_val)
	
	% Coverage TCC generated (at line 103, column 17) for
	% COND new_val = 0 -> st WITH [d := 0, c := i, m := NA],
	%      new_val /= 0 AND new_val >= min_val ->
	%        LET new_val = limit(min_val)(new_val) IN
	%          IF valid?(mem)
	%            THEN st WITH [d := value(mem), c := i, m := NA]
	%          ELSE st WITH [d := new_val, c := i, m := NA]
	%          ENDIF,
	%      new_val /= 0 AND new_val < min_val ->
	%        IF valid?(mem) THEN st WITH [d := min_val, c := i, m := NA]
	%        ELSE st WITH [d := min_val, c := i, m := new_mem]
	%        ENDIF
	% ENDCOND
	  % untried
	dn_TCC6: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory,
	          min_val: bbraun_real, new_val: real, new_mem: Memory):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (min_val = min_value(st)) AND (new_val = val - pow10(i))
	     AND (new_mem = IF i >= 0 THEN mem(pow10(i)) ELSE mem ENDIF)
	     AND (NOT val <= min_val) AND NOT val > min_val
	     IMPLIES
	     new_val = 0 OR
	      new_val /= 0 AND new_val >= min_val OR new_val /= 0 AND new_val < min_val
	
	% Disjointness TCC generated (at line 101, column 10) for
	% COND val <= min_val -> st WITH [d := 0, c := i, m := NA],
	%      val > min_val ->
	%        COND new_val = 0 -> st WITH [d := 0, c := i, m := NA],
	%             new_val /= 0 AND new_val >= min_val ->
	%               LET new_val = limit(min_val)(new_val) IN
	%                 IF valid?(mem)
	%                   THEN st WITH [d := value(mem), c := i, m := NA]
	%                 ELSE st WITH [d := new_val, c := i, m := NA]
	%                 ENDIF,
	%             new_val /= 0 AND new_val < min_val ->
	%               IF valid?(mem)
	%                 THEN st WITH [d := min_val, c := i, m := NA]
	%               ELSE st WITH [d := min_val, c := i, m := new_mem]
	%               ENDIF
	%        ENDCOND
	% ENDCOND
	  % untried
	dn_TCC7: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory,
	          min_val: bbraun_real, new_val: real, new_mem: Memory):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (min_val = min_value(st)) AND (new_val = val - pow10(i))
	     AND (new_mem = IF i >= 0 THEN mem(pow10(i)) ELSE mem ENDIF)
	     IMPLIES NOT (val <= min_val AND val > min_val)
	
	% Coverage TCC generated (at line 101, column 10) for
	% COND val <= min_val -> st WITH [d := 0, c := i, m := NA],
	%      val > min_val ->
	%        COND new_val = 0 -> st WITH [d := 0, c := i, m := NA],
	%             new_val /= 0 AND new_val >= min_val ->
	%               LET new_val = limit(min_val)(new_val) IN
	%                 IF valid?(mem)
	%                   THEN st WITH [d := value(mem), c := i, m := NA]
	%                 ELSE st WITH [d := new_val, c := i, m := NA]
	%                 ENDIF,
	%             new_val /= 0 AND new_val < min_val ->
	%               IF valid?(mem)
	%                 THEN st WITH [d := min_val, c := i, m := NA]
	%               ELSE st WITH [d := min_val, c := i, m := new_mem]
	%               ENDIF
	%        ENDCOND
	% ENDCOND
	  % untried
	dn_TCC8: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory,
	          min_val: bbraun_real, new_val: real, new_mem: Memory):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (min_val = min_value(st)) AND (new_val = val - pow10(i))
	     AND (new_mem = IF i >= 0 THEN mem(pow10(i)) ELSE mem ENDIF)
	     IMPLIES val <= min_val OR val > min_val
	
	% The subtype TCC (at line 101, column 48) in decl nil for
	% term generated from dn  0
	% expected type  bbraun_real
	% The subtype TCC (at line 103, column 52) in decl nil for
	% term generated from dn  0
	% expected type  bbraun_real
	% Disjointness TCC generated (at line 123, column 14) for
	% COND val + pow10(i) < 0.1 -> 0.1,
	%      val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	%        val + pow10(i),
	%      val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	%        floor((val + pow10(i)) * 10) / 10,
	%      val + pow10(i) >= 1000 -> floor(val + pow10(i))
	% ENDCOND
	  % untried
	up_TCC1: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory):
	    val = st`d AND i = st`c AND mem = st`m IMPLIES
	          (NOT (val + pow10(i) < 0.1 AND
	                 val + pow10(i) >= 0.1 AND val + pow10(i) < 100))
	      AND (NOT (val + pow10(i) < 0.1 AND
	                 val + pow10(i) >= 100 AND val + pow10(i) < 1000))
	      AND (NOT (val + pow10(i) < 0.1 AND val + pow10(i) >= 1000))
	      AND (NOT ((val + pow10(i) >= 0.1 AND val + pow10(i) < 100) AND
	                 val + pow10(i) >= 100 AND val + pow10(i) < 1000))
	      AND (NOT ((val + pow10(i) >= 0.1 AND val + pow10(i) < 100) AND
	                 val + pow10(i) >= 1000))
	      AND NOT ((val + pow10(i) >= 100 AND val + pow10(i) < 1000) AND
	                val + pow10(i) >= 1000)
	
	% The subtype TCC (at line 101, column 48) in decl nil for
	 % term generated from dn  0
	    % expected type  bbraun_real
	  % is subsumed by init_TCC1
	% The subtype TCC (at line 103, column 52) in decl nil for
	 % term generated from dn  0
	    % expected type  bbraun_real
	  % is subsumed by init_TCC1
	
	% Coverage TCC generated (at line 123, column 14) for
	% COND val + pow10(i) < 0.1 -> 0.1,
	%      val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	%        val + pow10(i),
	%      val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	%        floor((val + pow10(i)) * 10) / 10,
	%      val + pow10(i) >= 1000 -> floor(val + pow10(i))
	% ENDCOND
	  % untried
	up_TCC2: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory):
	    val = st`d AND i = st`c AND mem = st`m IMPLIES
	     val + pow10(i) < 0.1 OR
	      val + pow10(i) >= 0.1 AND val + pow10(i) < 100 OR
	       val + pow10(i) >= 100 AND val + pow10(i) < 1000 OR
	        val + pow10(i) >= 1000
	
	% Subtype TCC generated (at line 138, column 54) for  max
	% expected type  bbraun_real
	  % untried
	up_TCC3: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     AND (NOT val = max) AND (val < max) AND (new_val > max) AND valid?(mem)
	     IMPLIES max <= max
	
	% Subtype TCC generated (at line 139, column 39) for  max
	% expected type  bbraun_real
	  % untried
	up_TCC4: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     AND (NOT val = max) AND (val < max) AND (new_val > max)
	     AND NOT valid?(mem)
	     IMPLIES max <= max
	
	% Subtype TCC generated (at line 143, column 53) for  new_i
	% expected type  Cursor
	  % untried
	up_TCC5: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     AND (NOT val = max) AND (val < max) AND (NOT new_val > max)
	     AND (new_val <= max) AND NOT valid?(mem)
	     IMPLIES new_i >= -2 AND new_i <= 4
	
	% Subtype TCC generated (at line 143, column 39) for  new_val
	% expected type  bbraun_real
	  % untried
	up_TCC6: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     AND (NOT val = max) AND (val < max) AND (NOT new_val > max)
	     AND (new_val <= max) AND NOT valid?(mem)
	     IMPLIES new_val >= 0
	
	% Subtype TCC generated (at line 143, column 53) for  new_i
	% expected type  Cursor
	  % untried
	up_TCC7: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     AND (NOT val = max) AND (val < max) AND (NOT new_val > max)
	     AND (NOT new_val <= max) AND NOT valid?(mem)
	     IMPLIES new_i >= -2 AND new_i <= 4
	
	% Subtype TCC generated (at line 143, column 39) for  new_val
	% expected type  bbraun_real
	  % untried
	up_TCC8: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     AND (NOT val = max) AND (val < max) AND (NOT new_val > max)
	     AND (NOT new_val <= max) AND NOT valid?(mem)
	     IMPLIES new_val >= 0 AND new_val <= max
	
	% Disjointness TCC generated (at line 136, column 15) for
	% COND new_val > max ->
	%        IF valid?(mem) THEN st WITH [d := max, c := i, m := mem]
	%        ELSE st WITH [d := max, c := i, m := new_mem]
	%        ENDIF,
	%      new_val <= max ->
	%        IF valid?(mem) THEN st WITH [d := value(mem), c := i, m := NA]
	%        ELSE st WITH [d := new_val, c := new_i, m := NA]
	%        ENDIF
	% ENDCOND
	  % untried
	up_TCC9: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     AND (NOT val = max) AND (val < max)
	     IMPLIES NOT (new_val > max AND new_val <= max)
	
	% Coverage TCC generated (at line 136, column 15) for
	% COND new_val > max ->
	%        IF valid?(mem) THEN st WITH [d := max, c := i, m := mem]
	%        ELSE st WITH [d := max, c := i, m := new_mem]
	%        ENDIF,
	%      new_val <= max ->
	%        IF valid?(mem) THEN st WITH [d := value(mem), c := i, m := NA]
	%        ELSE st WITH [d := new_val, c := new_i, m := NA]
	%        ENDIF
	% ENDCOND
	  % untried
	up_TCC10: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     AND (NOT val = max) AND (val < max)
	     IMPLIES new_val > max OR new_val <= max
	
	% Subtype TCC generated (at line 138, column 54) for  max
	% expected type  bbraun_real
	  % untried
	up_TCC11: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     AND (NOT val = max) AND (NOT val < max) AND (new_val > max)
	     AND valid?(mem)
	     IMPLIES max <= max
	
	% Subtype TCC generated (at line 139, column 39) for  max
	% expected type  bbraun_real
	  % untried
	up_TCC12: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     AND (NOT val = max) AND (NOT val < max) AND (new_val > max)
	     AND NOT valid?(mem)
	     IMPLIES max <= max
	
	% Subtype TCC generated (at line 143, column 53) for  new_i
	% expected type  Cursor
	  % untried
	up_TCC13: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     AND (NOT val = max) AND (NOT val < max) AND (NOT new_val > max)
	     AND (new_val <= max) AND NOT valid?(mem)
	     IMPLIES new_i >= -2 AND new_i <= 4
	
	% Subtype TCC generated (at line 143, column 39) for  new_val
	% expected type  bbraun_real
	  % untried
	up_TCC14: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     AND (NOT val = max) AND (NOT val < max) AND (NOT new_val > max)
	     AND (new_val <= max) AND NOT valid?(mem)
	     IMPLIES new_val >= 0
	
	% Subtype TCC generated (at line 143, column 53) for  new_i
	% expected type  Cursor
	  % untried
	up_TCC15: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     AND (NOT val = max) AND (NOT val < max) AND (NOT new_val > max)
	     AND (NOT new_val <= max) AND NOT valid?(mem)
	     IMPLIES new_i >= -2 AND new_i <= 4
	
	% Subtype TCC generated (at line 143, column 39) for  new_val
	% expected type  bbraun_real
	  % untried
	up_TCC16: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     AND (NOT val = max) AND (NOT val < max) AND (NOT new_val > max)
	     AND (NOT new_val <= max) AND NOT valid?(mem)
	     IMPLIES new_val >= 0 AND new_val <= max
	
	% Disjointness TCC generated (at line 136, column 15) for
	% COND new_val > max ->
	%        IF valid?(mem) THEN st WITH [d := max, c := i, m := mem]
	%        ELSE st WITH [d := max, c := i, m := new_mem]
	%        ENDIF,
	%      new_val <= max ->
	%        IF valid?(mem) THEN st WITH [d := value(mem), c := i, m := NA]
	%        ELSE st WITH [d := new_val, c := new_i, m := NA]
	%        ENDIF
	% ENDCOND
	  % untried
	up_TCC17: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     AND (NOT val = max) AND NOT val < max
	     IMPLIES NOT (new_val > max AND new_val <= max)
	
	% Coverage TCC generated (at line 136, column 15) for
	% COND new_val > max ->
	%        IF valid?(mem) THEN st WITH [d := max, c := i, m := mem]
	%        ELSE st WITH [d := max, c := i, m := new_mem]
	%        ENDIF,
	%      new_val <= max ->
	%        IF valid?(mem) THEN st WITH [d := value(mem), c := i, m := NA]
	%        ELSE st WITH [d := new_val, c := new_i, m := NA]
	%        ENDIF
	% ENDCOND
	  % untried
	up_TCC18: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     AND (NOT val = max) AND NOT val < max
	     IMPLIES new_val > max OR new_val <= max
	
	% Disjointness TCC generated (at line 134, column 10) for
	% COND val = max -> st,
	%      val < max ->
	%        COND new_val > max ->
	%               IF valid?(mem)
	%                 THEN st WITH [d := max, c := i, m := mem]
	%               ELSE st WITH [d := max, c := i, m := new_mem]
	%               ENDIF,
	%             new_val <= max ->
	%               IF valid?(mem)
	%                 THEN st WITH [d := value(mem), c := i, m := NA]
	%               ELSE st WITH [d := new_val, c := new_i, m := NA]
	%               ENDIF
	%        ENDCOND
	% ENDCOND
	  % untried
	up_TCC19: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     IMPLIES NOT (val = max AND val < max)
	
	% Coverage TCC generated (at line 134, column 10) for
	% COND val = max -> st,
	%      val < max ->
	%        COND new_val > max ->
	%               IF valid?(mem)
	%                 THEN st WITH [d := max, c := i, m := mem]
	%               ELSE st WITH [d := max, c := i, m := new_mem]
	%               ENDIF,
	%             new_val <= max ->
	%               IF valid?(mem)
	%                 THEN st WITH [d := value(mem), c := i, m := NA]
	%               ELSE st WITH [d := new_val, c := new_i, m := NA]
	%               ENDIF
	%        ENDCOND
	% ENDCOND
	  % untried
	up_TCC20: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory, new_val: real,
	          new_mem: (valid?), new_i: int):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (new_val =
	           COND val + pow10(i) < 0.1 -> 0.1,
	                val + pow10(i) >= 0.1 AND val + pow10(i) < 100 ->
	                  val + pow10(i),
	                val + pow10(i) >= 100 AND val + pow10(i) < 1000 ->
	                  floor((val + pow10(i)) * 10) / 10,
	                ELSE -> floor(val + pow10(i))
	           ENDCOND)
	     AND (new_mem = mem(val))
	     AND (new_i =
	           IF i = -2 AND new_val = 100 THEN -1
	           ELSIF i = -1 AND new_val = 1000 THEN 0
	           ELSE i
	           ENDIF)
	     IMPLIES val = max OR val < max
	
	% Subtype TCC generated (at line 153, column 42) for  i + 1
	% expected type  Cursor
	  % untried
	lf_TCC1: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory):
	    val = st`d AND i = st`c AND mem = st`m AND i < 4 IMPLIES
	     i + 1 >= -2 AND i + 1 <= 4
	
	% Disjointness TCC generated (at line 152, column 6) for
	% COND i < 4 -> st WITH [d := val, c := i + 1, m := NA],
	%      i = 4 -> st WITH [d := val, c := i, m := mem]
	% ENDCOND
	  % untried
	lf_TCC2: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory):
	    val = st`d AND i = st`c AND mem = st`m IMPLIES NOT (i < 4 AND i = 4)
	
	% Coverage TCC generated (at line 152, column 6) for
	% COND i < 4 -> st WITH [d := val, c := i + 1, m := NA],
	%      i = 4 -> st WITH [d := val, c := i, m := mem]
	% ENDCOND
	  % untried
	lf_TCC3: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory):
	    val = st`d AND i = st`c AND mem = st`m IMPLIES i < 4 OR i = 4
	
	% Subtype TCC generated (at line 162, column 50) for  i - 1
	% expected type  Cursor
	  % untried
	rt_TCC1: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory,
	          min_pos: Cursor):
	         (val = st`d) AND (i = st`c) AND (mem = st`m)
	     AND (min_pos = min_position(st)) AND (i > min_pos)
	     IMPLIES i - 1 >= -2 AND i - 1 <= 4
	
	% Disjointness TCC generated (at line 161, column 7) for
	% COND i > min_pos -> st WITH [d := val, c := i - 1, m := NA],
	%      i <= min_pos -> st WITH [d := val, c := i, m := mem]
	% ENDCOND
	  % untried
	rt_TCC2: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory,
	          min_pos: Cursor):
	    val = st`d AND i = st`c AND mem = st`m AND min_pos = min_position(st)
	     IMPLIES NOT (i > min_pos AND i <= min_pos)
	
	% Coverage TCC generated (at line 161, column 7) for
	% COND i > min_pos -> st WITH [d := val, c := i - 1, m := NA],
	%      i <= min_pos -> st WITH [d := val, c := i, m := mem]
	% ENDCOND
	  % untried
	rt_TCC3: OBLIGATION
	FORALL (st: State, val: bbraun_real, i: Cursor, mem: Memory,
	          min_pos: Cursor):
	    val = st`d AND i = st`c AND mem = st`m AND min_pos = min_position(st)
	     IMPLIES i > min_pos OR i <= min_pos
	
	% Subtype TCC generated (at line 185, column 36) for  0.1
	% expected type  bbraun_real
	  % untried
	bbraun_ok_TCC1: OBLIGATION
	FORALL (st: State): int2boolean(st`on) AND st`d > 0 IMPLIES 0.1 <= max

END bbraun_space_TCCS