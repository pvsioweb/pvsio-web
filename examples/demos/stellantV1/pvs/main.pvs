main: THEORY
 BEGIN

  Mode: TYPE = { OFF, INIT, AUTO, MANUAL, %PUSH_PLUNGER,
                 PULL_PLUNGER,
  	       	 READY_TO_PRIME, PRIMING, CONFIRM, ENGAGE, READY }

  MAX_VOLUME: nat = 200 %-- mL
  Volume: TYPE = upto(MAX_VOLUME) %-- mL
  Button: TYPE = { BLINKING, DARK, LIGHT }

  PlungerLevel: upto(MAX_VOLUME)
  % plunger speed
  FAST: Volume = 10
  SLOW: Volume = 1

  DEFAULT_VOLUME_SALINE: Volume = 150
  DEFAULT_VOLUME_CONTRAST: Volume = 50

  state: TYPE = [#
    mode: Mode,
    plunger_saline: Volume,
    plunger_contrast: Volume,
    vol_saline: Volume,
    vol_contrast: Volume,
    vol_saline_visible: bool,
    vol_contrast_visible: bool,
    vol_saline_confirmed: bool,
    vol_contrast_confirmed: bool,
    btn_fill_saline: Button,
    btn_fill_contrast: Button,
    btn_auto: Button,
    btn_manual: Button,
    btn_prime: Button,
    btn_confirm: Button,
    btn_engage: Button
  #]

  init(x: real): state = (#
    mode := INIT,
    plunger_saline := 0,
    plunger_contrast := 0,
    vol_saline := DEFAULT_VOLUME_SALINE,
    vol_contrast := DEFAULT_VOLUME_CONTRAST,
    vol_saline_visible := FALSE,
    vol_contrast_visible := FALSE,
    vol_saline_confirmed := FALSE,
    vol_contrast_confirmed := FALSE,    
    btn_fill_saline := DARK,
    btn_fill_contrast := DARK,
    btn_auto := LIGHT,
    btn_manual := DARK,
    btn_prime := DARK,
    btn_confirm := DARK,
    btn_engage := DARK
  #)

  step: Volume = 1
  inc(x: Volume): Volume =
   COND
    x + step <= MAX_VOLUME -> x + step,
    ELSE -> MAX_VOLUME
   ENDCOND
  dec(x: Volume): Volume =
   COND
    x - step >= 0 -> x - step,
    ELSE -> 0
   ENDCOND

  %-- contrast
  per_inc_contrast(st: state): bool = (NOT vol_contrast_confirmed(st))
  inc_contrast(st: (per_inc_contrast)): state = st WITH [ vol_contrast := inc(vol_contrast(st)) ]
  click_inc_contrast(st: state): state =
    COND
      per_inc_contrast(st) -> inc_contrast(st),
      ELSE -> st
    ENDCOND
  press_inc_contrast(st: state): state = click_inc_contrast(st)
  release_inc_contrast(st: state): state = st
  
  per_dec_contrast(st: state): bool = (NOT vol_contrast_confirmed(st))
  dec_contrast(st: (per_inc_contrast)): state = st WITH [ vol_contrast := dec(vol_contrast(st)) ]
  click_dec_contrast(st: state): state =
    COND
      per_dec_contrast(st) -> dec_contrast(st),
      ELSE -> st
    ENDCOND
  press_dec_contrast(st: state): state = click_dec_contrast(st)
  release_dec_contrast(st: state): state = st

  %--saline
  per_inc_saline(st: state): bool = (NOT vol_saline_confirmed(st))
  inc_saline(st: (per_inc_saline)): state = st WITH [ vol_saline := inc(vol_saline(st)) ]
  click_inc_saline(st: state): state =
    COND
      per_inc_saline(st) -> inc_saline(st),
      ELSE -> st
    ENDCOND
  press_inc_saline(st: state): state = click_inc_saline(st)
  release_inc_saline(st: state): state = st

  per_dec_saline(st: state): bool = (NOT vol_saline_confirmed(st))
  dec_saline(st: (per_inc_saline)): state = st WITH [ vol_saline := dec(vol_saline(st)) ]
  click_dec_saline(st: state): state =
    COND
      per_dec_saline(st) -> dec_saline(st),
      ELSE -> st
    ENDCOND
  press_dec_saline(st: state): state = click_dec_saline(st)
  release_dec_saline(st: state): state = st

  volumes_confirmed?(st: state): bool = vol_saline_confirmed(st) AND vol_contrast_confirmed(st)
  set_btn_colors(st: state): state =
    COND
     mode(st) = OFF OR mode(st) = READY -> st WITH [
    	btn_fill_contrast := DARK,
      	btn_fill_saline := DARK,
      	btn_auto := DARK,
      	btn_manual := DARK,
      	btn_prime := DARK,
      	btn_confirm := DARK,
	btn_engage := DARK ],
     mode(st) = INIT -> st WITH [
    	btn_fill_contrast := DARK,
      	btn_fill_saline := DARK,
      	btn_auto := LIGHT,
	btn_manual := DARK,
      	btn_prime := DARK,
      	btn_confirm := DARK,
	btn_engage := DARK ],
     mode(st) = AUTO OR mode(st) = PULL_PLUNGER -> st WITH [
    	btn_fill_contrast := IF vol_contrast_confirmed(st) THEN LIGHT ELSE BLINKING ENDIF,
      	btn_fill_saline := IF vol_saline_confirmed(st) THEN LIGHT ELSE BLINKING ENDIF,
      	btn_auto := DARK,
	btn_manual := DARK,
      	btn_prime := DARK,
      	btn_confirm := DARK,
	btn_engage := DARK ],
     mode(st) = MANUAL -> st WITH [
    	btn_fill_contrast := DARK,
      	btn_fill_saline := DARK,
      	btn_auto := DARK,
	btn_manual := LIGHT,
      	btn_prime := DARK,
      	btn_confirm := DARK,
	btn_engage := DARK ],
    mode(st) = PRIMING OR mode(st) = READY_TO_PRIME -> st WITH [
    	btn_fill_contrast := DARK,
      	btn_fill_saline := DARK,
      	btn_auto := DARK,
	btn_manual := DARK,
      	btn_prime := LIGHT,
      	btn_confirm := DARK,
	btn_engage := DARK ],
    mode(st) = CONFIRM -> st WITH [
    	btn_fill_contrast := DARK,
      	btn_fill_saline := DARK,
      	btn_auto := DARK,
	btn_manual := DARK,
      	btn_prime := DARK,
      	btn_confirm := LIGHT,
	btn_engage := DARK ],
    mode(st) = ENGAGE -> st WITH [
    	btn_fill_contrast := DARK,
      	btn_fill_saline := DARK,
      	btn_auto := DARK,
	btn_manual := DARK,
      	btn_prime := DARK,
      	btn_confirm := DARK,
	btn_engage := LIGHT ]	
    ENDCOND



  %-- auto load
  per_btn_auto(st: state): bool = true
  click_btn_auto(st: (per_btn_auto)): state =
   COND
    per_btn_auto(st)
      -> LET st = st WITH [ mode := AUTO,
      	     	     	    vol_saline := DEFAULT_VOLUME_SALINE,
			    vol_contrast := DEFAULT_VOLUME_CONTRAST,
      		            vol_saline_visible := TRUE,
      			    vol_contrast_visible := TRUE,
      			    vol_saline_confirmed := FALSE,
      			    vol_contrast_confirmed := FALSE ]
	  IN set_btn_colors(st),
    ELSE -> st
   ENDCOND
  
  per_btn_manual(st: state): bool = true
  click_btn_manual(st: (per_btn_manual)): state =
   COND
    per_btn_manual(st)
      -> LET st = st WITH [ mode := MANUAL,
      	     	     	    vol_saline := plunger_saline(st),
			    vol_contrast := plunger_contrast(st),
      		            vol_saline_visible := TRUE,
      			    vol_contrast_visible := TRUE,
      			    vol_saline_confirmed := FALSE,
      			    vol_contrast_confirmed := FALSE ]
	  IN set_btn_colors(st),
    ELSE -> st
   ENDCOND
 
  per_btn_fill_saline(st: state): bool = (mode(st) = AUTO OR mode(st) = PULL_PLUNGER)
  click_btn_fill_saline(st: (per_btn_fill_saline)): state =
   COND
    per_btn_fill_saline(st)
     -> LET st = st WITH [ vol_saline_confirmed := TRUE, mode := PULL_PLUNGER ]
          IN set_btn_colors(st),
    ELSE -> st
   ENDCOND
   
  per_btn_fill_contrast(st: state): bool = (mode(st) = AUTO OR mode(st) = PULL_PLUNGER)
  click_btn_fill_contrast(st: (per_btn_fill_contrast)): state =
   COND
    per_btn_fill_contrast(st)
      -> LET st = st WITH [ vol_contrast_confirmed := TRUE, mode := PULL_PLUNGER ]
          IN set_btn_colors(st),
    ELSE -> st
   ENDCOND

  per_btn_prime(st: state): bool = (mode(st) = READY_TO_PRIME OR mode(st) = MANUAL)
  click_btn_prime(st: (per_btn_prime)): state =
   COND
    per_btn_prime(st)
      -> LET st = st WITH [ mode := PRIMING ]
          IN set_btn_colors(st),
    ELSE -> st
   ENDCOND

  per_btn_confirm(st: state): bool = (mode(st) = CONFIRM)
  click_btn_confirm(st: (per_btn_confirm)): state =
   COND
    per_btn_confirm(st)
      -> LET st = st WITH [ mode := ENGAGE ]
          IN set_btn_colors(st),
    ELSE -> st
   ENDCOND

  per_btn_engage(st: state): bool = (mode(st) = ENGAGE)
  click_btn_engage(st: (per_btn_engage)): state =
   COND
    per_btn_engage(st)
      -> LET st = st WITH [ mode := READY ]
          IN set_btn_colors(st),
    ELSE -> st
   ENDCOND

  %-- these utility functions automatically stop pulling the plunger when the target volume has been reached
  auto_pull_plunger_saline(step: Volume)(st: state): state =
    IF plunger_saline(st) + step <= MAX_VOLUME
    THEN st WITH [ plunger_saline := IF plunger_saline(st) + step <= vol_saline(st) THEN plunger_saline(st) + step ELSE vol_saline(st) ENDIF ] ELSE st ENDIF
  auto_pull_plunger_contrast(step: Volume)(st: state): state =
    IF plunger_contrast(st) + step <= MAX_VOLUME
    THEN st WITH [ plunger_contrast := IF plunger_contrast(st) + step <= vol_contrast(st) THEN plunger_contrast(st) + step ELSE vol_contrast(st) ENDIF ] ELSE st ENDIF
  manual_pull_plunger_saline(step: Volume)(st: state): state =
    st WITH [ plunger_saline := IF plunger_saline(st) + step <= MAX_VOLUME THEN plunger_saline(st) + step ELSE MAX_VOLUME ENDIF ]
  manual_pull_plunger_contrast(step: Volume)(st: state): state =
    st WITH [ plunger_contrast := IF plunger_contrast(st) + step <= MAX_VOLUME THEN plunger_contrast(st) + step ELSE MAX_VOLUME ENDIF ]
  push_plunger_saline(step: Volume)(st: state): state =
    st WITH [ plunger_saline := IF plunger_saline(st) - step >= 0 THEN plunger_saline(st) - step ELSE 0 ENDIF ]
  push_plunger_contrast(step: Volume)(st: state): state =
    st WITH [ plunger_contrast := IF plunger_contrast(st) - step > 0 THEN plunger_contrast(st) - step ELSE 0 ENDIF ]
  
  %-- this is for the automatic mode
  per_tick(st: state): bool = (mode(st) = PULL_PLUNGER OR mode(st) = PRIMING)
  tick(st: (per_tick)): state =
    COND
     mode(st) = PULL_PLUNGER ->
       LET st = IF vol_saline_confirmed(st) THEN auto_pull_plunger_saline(FAST)(st) ELSE st ENDIF,
	   st = IF vol_contrast_confirmed(st) THEN auto_pull_plunger_contrast(FAST)(st) ELSE st ENDIF,
	   st = IF vol_saline_confirmed(st) AND vol_contrast_confirmed(st) AND
	            plunger_saline(st) >= vol_saline(st) AND plunger_contrast(st) >= vol_contrast(st) THEN st WITH [ mode := READY_TO_PRIME ] ELSE st ENDIF
	IN set_btn_colors(st),
     mode(st) = PRIMING ->
       LET st = st WITH [ mode := CONFIRM ]
        IN set_btn_colors(st),
     ELSE -> st
    ENDCOND

  %-- manual saline
  per_sUP_saline(st: state): bool = mode(st) = MANUAL
  sUP_saline(st: (per_sUP_saline)): state =
   LET st = push_plunger_saline(SLOW)(st)
    IN st WITH [ vol_saline := plunger_saline(st),
	         vol_contrast := plunger_contrast(st) ]
  click_btn_sUP_saline(st: state): state =
   COND
     per_sUP_saline(st) -> sUP_saline(st),
     ELSE -> st
   ENDCOND
  press_btn_sUP_saline(st: state): state = click_btn_sUP_saline(st)
  release_btn_sUP_saline(st: state): state = st

  per_fUP_saline(st: state): bool = mode(st) = MANUAL
  fUP_saline(st: (per_fUP_saline)): state =
   LET st = push_plunger_saline(FAST)(st)
    IN st WITH [ vol_saline := plunger_saline(st),
		 vol_contrast := plunger_contrast(st) ]

  click_btn_fUP_saline(st: state): state =
   COND
     per_fUP_saline(st) -> fUP_saline(st),
     ELSE -> st
   ENDCOND
  press_btn_fUP_saline(st: state): state = click_btn_fUP_saline(st)
  release_btn_fUP_saline(st: state): state = st

  per_sDOWN_saline(st: state): bool = mode(st) = MANUAL
  sDOWN_saline(st: (per_sDOWN_saline)): state =
   LET st = manual_pull_plunger_saline(SLOW)(st)
    IN st WITH [ vol_saline := plunger_saline(st),
		 vol_contrast := plunger_contrast(st) ]

  click_btn_sDOWN_saline(st: state): state =
   COND
     per_sDOWN_saline(st) -> sDOWN_saline(st),
     ELSE -> st
   ENDCOND
  press_btn_sDOWN_saline(st: state): state = click_btn_sDOWN_saline(st)
  release_btn_sDOWN_saline(st: state): state = st
  
  per_fDOWN_saline(st: state): bool = mode(st) = MANUAL
  fDOWN_saline(st: (per_fDOWN_saline)): state =
   LET st = manual_pull_plunger_saline(FAST)(st)
    IN st WITH [ vol_saline := plunger_saline(st),
		 vol_contrast := plunger_contrast(st) ]

  click_btn_fDOWN_saline(st: state): state =
   COND
     per_fDOWN_saline(st) -> fDOWN_saline(st),
     ELSE -> st
   ENDCOND
  press_btn_fDOWN_saline(st: state): state = click_btn_fDOWN_saline(st)
  release_btn_fDOWN_saline(st: state): state = st

  %-- manual contrast
  per_sUP_contrast(st: state): bool = mode(st) = MANUAL
  sUP_contrast(st: (per_sUP_contrast)): state =
   LET st = push_plunger_contrast(SLOW)(st)
    IN st WITH [ vol_saline := plunger_saline(st),
		 vol_contrast := plunger_contrast(st) ]   
  click_btn_sUP_contrast(st: state): state =
   COND
     per_sUP_contrast(st) -> sUP_contrast(st),
     ELSE -> st
   ENDCOND
  press_btn_sUP_contrast(st: state): state = click_btn_sUP_contrast(st)
  release_btn_sUP_contrast(st: state): state = st

  per_fUP_contrast(st: state): bool = mode(st) = MANUAL
  fUP_contrast(st: (per_fUP_contrast)): state =
   LET st = push_plunger_contrast(FAST)(st)
    IN st WITH [ vol_saline := plunger_saline(st),
		 vol_contrast := plunger_contrast(st) ]   
  click_btn_fUP_contrast(st: state): state =
   COND
     per_fUP_contrast(st) -> fUP_contrast(st),
     ELSE -> st
   ENDCOND
  press_btn_fUP_contrast(st: state): state = click_btn_fUP_contrast(st)
  release_btn_fUP_contrast(st: state): state = st

  per_sDOWN_contrast(st: state): bool = mode(st) = MANUAL
  sDOWN_contrast(st: (per_sDOWN_contrast)): state =
   LET st = manual_pull_plunger_contrast(SLOW)(st)
    IN st WITH [ vol_saline := plunger_saline(st),
		 vol_contrast := plunger_contrast(st) ]   
  click_btn_sDOWN_contrast(st: state): state =
   COND
     per_sDOWN_contrast(st) -> sDOWN_contrast(st),
     ELSE -> st
   ENDCOND
  press_btn_sDOWN_contrast(st: state): state = click_btn_sDOWN_contrast(st)
  release_btn_sDOWN_contrast(st: state): state = st
  
  per_fDOWN_contrast(st: state): bool = mode(st) = MANUAL
  fDOWN_contrast(st: (per_fDOWN_contrast)): state =
   LET st = manual_pull_plunger_contrast(FAST)(st)
    IN st WITH [ vol_saline := plunger_saline(st),
		 vol_contrast := plunger_contrast(st) ]   
  click_btn_fDOWN_contrast(st: state): state =
   COND
     per_fDOWN_contrast(st) -> fDOWN_contrast(st),
     ELSE -> st
   ENDCOND
  press_btn_fDOWN_contrast(st: state): state = click_btn_fDOWN_contrast(st)
  release_btn_fDOWN_contrast(st: state): state = st
  
 END main
