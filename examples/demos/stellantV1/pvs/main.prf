(main
 (FAST_TCC1 0
  (FAST_TCC1-1 nil 3705346664 ("" (subtype-tcc) nil nil)
   ((MAX_VOLUME const-decl "nat" main nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (SLOW_TCC1 0
  (SLOW_TCC1-1 nil 3705346664 ("" (subtype-tcc) nil nil)
   ((MAX_VOLUME const-decl "nat" main nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (DEFAULT_VOLUME_SALINE_TCC1 0
  (DEFAULT_VOLUME_SALINE_TCC1-1 nil 3705346664
   ("" (subtype-tcc) nil nil)
   ((MAX_VOLUME const-decl "nat" main nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (DEFAULT_VOLUME_CONTRAST_TCC1 0
  (DEFAULT_VOLUME_CONTRAST_TCC1-1 nil 3705346664
   ("" (subtype-tcc) nil nil)
   ((MAX_VOLUME const-decl "nat" main nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (init_TCC1 0
  (init_TCC1-1 nil 3705346664 ("" (subtype-tcc) nil nil)
   ((MAX_VOLUME const-decl "nat" main nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (inc_TCC1 0
  (inc_TCC1-1 nil 3705346664 ("" (subtype-tcc) nil nil)
   ((step const-decl "Volume" main nil)
    (MAX_VOLUME const-decl "nat" main nil))
   nil))
 (dec_TCC1 0
  (dec_TCC1-1 nil 3705346664 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Volume type-eq-decl nil main nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (step const-decl "Volume" main nil)
    (MAX_VOLUME const-decl "nat" main nil))
   nil))
 (click_dec_contrast_TCC1 0
  (click_dec_contrast_TCC1-1 nil 3705346664 ("" (subtype-tcc) nil nil)
   ((per_dec_contrast const-decl "bool" main nil)
    (per_inc_contrast const-decl "bool" main nil))
   nil))
 (click_dec_saline_TCC1 0
  (click_dec_saline_TCC1-1 nil 3705346664 ("" (subtype-tcc) nil nil)
   ((per_dec_saline const-decl "bool" main nil)
    (per_inc_saline const-decl "bool" main nil))
   nil))
 (set_btn_colors_TCC1 0
  (set_btn_colors_TCC1-1 nil 3705346664
   ("" (cond-disjoint-tcc) nil nil) nil nil))
 (set_btn_colors_TCC2 0
  (set_btn_colors_TCC2-1 nil 3705346664
   ("" (cond-coverage-tcc) nil nil) nil nil))
 (push_plunger_saline_TCC1 0
  (push_plunger_saline_TCC1-1 nil 3705346806
   ("" (grind) (("" (all-typepreds) (("" (assert) nil nil)) nil)) nil)
   ((even? const-decl "bool" integers nil)
    (state type-eq-decl nil main nil) (Mode type-decl nil main nil)
    (Button type-decl nil main nil)
    (total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (> const-decl "bool" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Volume type-eq-decl nil main nil)
    (MAX_VOLUME const-decl "nat" main nil))
   nil))
 (push_plunger_saline_TCC2 0
  (push_plunger_saline_TCC2-1 nil 3705346806 ("" (subtype-tcc) nil nil)
   ((MAX_VOLUME const-decl "nat" main nil)) nil))
 (push_plunger_contrast_TCC1 0
  (push_plunger_contrast_TCC1-1 nil 3705346806
   ("" (grind) (("" (all-typepreds) (("" (assert) nil nil)) nil)) nil)
   ((even? const-decl "bool" integers nil)
    (state type-eq-decl nil main nil) (Mode type-decl nil main nil)
    (Button type-decl nil main nil) (> const-decl "bool" reals nil)
    (strict_total_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (total_order? const-decl "bool" orders nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Volume type-eq-decl nil main nil)
    (MAX_VOLUME const-decl "nat" main nil))
   nil))
 (push_plunger_contrast_TCC2 0
  (push_plunger_contrast_TCC2-1 nil 3705346806
   ("" (subtype-tcc) nil nil) ((MAX_VOLUME const-decl "nat" main nil))
   nil)))

