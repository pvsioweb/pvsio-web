consistency_th: THEORY
 BEGIN IMPORTING emucharts_fcusoftware_th

%-- useful definitions
init?(st: State): bool = (st = init(0))
trans(pre, post: State): bool =
   (per_click_CLR(pre) AND post = click_CLR(pre)) OR
   (per_click_digit_0(pre) AND post = click_digit_0(pre)) OR
   (per_click_digit_1(pre) AND post = click_digit_1(pre)) OR
   (per_click_digit_2(pre) AND post = click_digit_2(pre)) OR
   (per_click_digit_3(pre) AND post = click_digit_3(pre)) OR
   (per_click_digit_4(pre) AND post = click_digit_4(pre)) OR
   (per_click_digit_5(pre) AND post = click_digit_5(pre)) OR
   (per_click_digit_6(pre) AND post = click_digit_6(pre)) OR
   (per_click_digit_7(pre) AND post = click_digit_7(pre)) OR
   (per_click_digit_8(pre) AND post = click_digit_8(pre)) OR
   (per_click_digit_9(pre) AND post = click_digit_9(pre)) OR
   (per_click_editbox_pressure(pre) AND post = click_editbox_pressure(pre)) OR
   (per_click_ESC(pre) AND post = click_ESC(pre)) OR
   (per_click_hPa(pre) AND post = click_hPa(pre)) OR
   (per_click_inHg(pre) AND post = click_inHg(pre)) OR
   (per_click_OK(pre) AND post = click_OK(pre)) OR
   (per_click_point(pre) AND post = click_point(pre)) OR
   (per_click_QNH_RADIO(pre) AND post = click_QNH_RADIO(pre)) OR
   (per_click_STD_RADIO(pre) AND post = click_STD_RADIO(pre)) OR
   (per_tick(pre) AND post = tick(pre))
   


%-- consistency predicate
consistency(st: State): bool =
    (LET post = click_CLR(st)
      IN per_click_CLR(st) IMPLIES
         (post`editbox_selected = st`editbox_selected)) AND
    (LET post = click_digit_0(st)
      IN per_click_digit_0(st) IMPLIES
         (post`editbox_selected = st`editbox_selected))

%-- PVS theorem based on the consistency predicate, formulated using structural induction
CONSISTENCY: THEOREM
  FORALL (pre, post: State):
    (init?(pre) IMPLIES consistency(pre))
       AND
    ((consistency(pre) AND trans(pre, post)) IMPLIES consistency(post))

 END consistency_th
